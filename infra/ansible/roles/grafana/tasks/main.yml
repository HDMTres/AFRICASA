---
# tasks file for ./roles/grafana
- name: Check if Grafana is installed
  ansible.builtin.stat:
    path: /usr/sbin/grafana-server
  register: __grafana_installed

- name: Create Grafana group
  ansible.builtin.group:
    name: grafana
    state: present
  when: not __grafana_installed.stat.exists

- name: Create Grafana user
  ansible.builtin.user:
    name: "{{ grafana_user }}"
    comment: "Grafana User"
    shell: /bin/bash
    create_home: yes
  when: not __grafana_installed.stat.exists

- name: Install Grafana dependencies
  ansible.builtin.package:
    name:
      - apt-transport-https
      - software-properties-common
      - wget
    state: present

- name: Add Grafana GPG key
  ansible.builtin.apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present
  when: not __grafana_installed.stat.exists

- name: Add Grafana APT repository
  ansible.builtin.apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"
    state: present
  when: not __grafana_installed.stat.exists

- name: Install Grafana
  ansible.builtin.package:
    name: grafana
    state: present
  when: not __grafana_installed.stat.exists

- name : Configure Grafana
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    mode: '0644'
  when: not __grafana_installed.stat.exists
  notify: Restart grafana

- name: Start and enable Grafana service
  ansible.builtin.systemd:
    name: grafana-server
    state: started
    enabled: true
  when: not __grafana_installed.stat.exists

- name: Configure UFW for Grafana
  community.general.ufw:
    rule: allow
    port: "{{ grafana_port }}"
    proto: tcp
  become: true
  when: not __grafana_installed.stat.exists


- name: Wait for Grafana to start
  ansible.builtin.wait_for:
    port: "{{ grafana_server.http_port }}"
    delay: 10
    timeout: 60
  when: not __grafana_installed.stat.exists

- name: Create Grafana directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: grafana
    group: grafana
    mode: '0755'
  loop:
    - "{{ grafana_dashboards_dir }}"
    - "/etc/grafana/provisioning/dashboards"
    - "/etc/grafana/provisioning/datasources"
    - "/etc/grafana/provisioning/notifiers"

- name: Configure Grafana datasources
  ansible.builtin.template:
    src: datasources.yml.j2
    dest: /etc/grafana/provisioning/datasources/datasources.yml
    owner: grafana
    group: grafana
    mode: '0644'
  notify: Restart grafana

- name: Configure Grafana dashboard providers
  ansible.builtin.template:
    src: dashboard-providers.yml.j2
    dest: /etc/grafana/provisioning/dashboards/providers.yml
    owner: grafana
    group: grafana
    mode: '0644'
  notify: Restart grafana

- name: Install custom dashboards
  ansible.builtin.template:
    src: "dashboards/{{ item }}.j2"
    dest: "{{ grafana_dashboards_dir }}/{{ item }}"
    owner: grafana
    group: grafana
    mode: '0644'
  loop:
    - africasa-infrastructure-overview.json
    - africasa-containers.json
  notify: Restart grafana
