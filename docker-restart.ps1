#!/usr/bin/env powershell

Write-Host "üê≥ AFRICASA - Script de red√©marrage Docker" -ForegroundColor Cyan
Write-Host "===========================================" -ForegroundColor Cyan

# Fonction pour v√©rifier si Docker est en cours d'ex√©cution
function Test-DockerRunning {
    try {
        docker --version | Out-Null
        return $true
    }
    catch {
        return $false
    }
}

# V√©rifier si Docker Desktop est d√©marr√©
Write-Host "üîç V√©rification de Docker Desktop..." -ForegroundColor Yellow

if (-not (Test-DockerRunning)) {
    Write-Host "‚ö†Ô∏è  Docker Desktop n'est pas en cours d'ex√©cution" -ForegroundColor Red
    Write-Host "üöÄ D√©marrage de Docker Desktop..." -ForegroundColor Yellow
    
    # Tenter de d√©marrer Docker Desktop
    try {
        Start-Process "C:\Program Files\Docker\Docker\Docker Desktop.exe" -WindowStyle Hidden
        Write-Host "‚è≥ Attente du d√©marrage de Docker (60 secondes)..." -ForegroundColor Yellow
        
        # Attendre que Docker soit pr√™t (max 60 secondes)
        $timeout = 60
        $elapsed = 0
        
        while (-not (Test-DockerRunning) -and $elapsed -lt $timeout) {
            Start-Sleep 5
            $elapsed += 5
            Write-Host "." -NoNewline -ForegroundColor Yellow
        }
        
        Write-Host ""
        
        if (Test-DockerRunning) {
            Write-Host "‚úÖ Docker Desktop est maintenant pr√™t!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Timeout: Docker Desktop n'a pas d√©marr√© dans les temps" -ForegroundColor Red
            Write-Host "Veuillez lancer Docker Desktop manuellement et r√©essayer." -ForegroundColor Red
            exit 1
        }
    }
    catch {
        Write-Host "‚ùå Erreur lors du d√©marrage de Docker Desktop" -ForegroundColor Red
        Write-Host "Veuillez lancer Docker Desktop manuellement." -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚úÖ Docker Desktop est d√©j√† en cours d'ex√©cution" -ForegroundColor Green
}

# Afficher la version de Docker
Write-Host "üìã Version Docker:" -ForegroundColor Cyan
docker --version
docker-compose --version

Write-Host ""
Write-Host "üõë Arr√™t des conteneurs existants..." -ForegroundColor Yellow
docker-compose down --remove-orphans

Write-Host ""
Write-Host "üî® Construction des images (sans cache)..." -ForegroundColor Yellow
docker-compose build --no-cache

Write-Host ""
Write-Host "üöÄ D√©marrage des conteneurs..." -ForegroundColor Yellow
docker-compose up -d

Write-Host ""
Write-Host "üìä Statut des conteneurs:" -ForegroundColor Cyan
docker-compose ps

Write-Host ""
Write-Host "‚è≥ Attente du d√©marrage des services (30 secondes)..." -ForegroundColor Yellow
Start-Sleep 30

Write-Host ""
Write-Host "üß™ Test de connectivit√©:" -ForegroundColor Cyan
Write-Host "------------------------" -ForegroundColor Cyan

# Test Backend
Write-Host "Backend API..." -NoNewline -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:5000/api/health" -Method GET -TimeoutSec 10
    if ($response.StatusCode -eq 200) {
        Write-Host " ‚úÖ OK" -ForegroundColor Green
    } else {
        Write-Host " ‚ùå FAILED (Status: $($response.StatusCode))" -ForegroundColor Red
    }
}
catch {
    Write-Host " ‚ùå FAILED (Error: $($_.Exception.Message))" -ForegroundColor Red
}

# Test Frontend
Write-Host "Frontend..." -NoNewline -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -Method GET -TimeoutSec 10
    if ($response.StatusCode -eq 200) {
        Write-Host " ‚úÖ OK" -ForegroundColor Green
    } else {
        Write-Host " ‚ùå FAILED (Status: $($response.StatusCode))" -ForegroundColor Red
    }
}
catch {
    Write-Host " ‚ùå FAILED (Error: $($_.Exception.Message))" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéØ URLs d'acc√®s:" -ForegroundColor Cyan
Write-Host "  Frontend: http://localhost:3000" -ForegroundColor White
Write-Host "  Backend:  http://localhost:5000/api" -ForegroundColor White

Write-Host ""
Write-Host "üìã Pour voir les logs:" -ForegroundColor Cyan
Write-Host "  docker-compose logs -f backend" -ForegroundColor White
Write-Host "  docker-compose logs -f frontend" -ForegroundColor White

Write-Host ""
Write-Host "‚úÖ Script termin√©!" -ForegroundColor Green
